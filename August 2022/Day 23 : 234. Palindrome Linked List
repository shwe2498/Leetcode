234. Palindrome Linked List
Given the head of a singly linked list, return true if it is a palindrome or false otherwise.

Example 1:
Input: head = [1,2,2,1]
Output: true

Example 2:
Input: head = [1,2]
Output: false

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        if(!head || !head->next){
            return true;
        }
        
        ListNode* temp = head;
        int size = 0;
        stack<int> vals;
        while(temp){
            size++;
            vals.push(temp->val);
            temp = temp->next;
        }
        
        ListNode* temp1 = head;
        while(temp1){
            if(vals.top() != temp1->val){
                return false;
            }
            vals.pop();
            temp1 = temp1->next;
        }
        
        
        return true;
    }
};
