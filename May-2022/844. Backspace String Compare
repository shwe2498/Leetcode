844. Backspace String Compare
Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

Example 1:
Input: s = "ab#c", t = "ad#c"
Output: true
Explanation: Both s and t become "ac".

Example 2:
Input: s = "ab##", t = "c#d#"
Output: true
Explanation: Both s and t become "".

Example 3:
Input: s = "a#c", t = "b"
Output: false
Explanation: s becomes "c" while t becomes "b".

class Solution {
public:
    bool backspaceCompare(string s, string t) {
        int slen = s.size() - 1;
        int tlen = t.size() - 1;
        int skipS = 0;
        int skipT = 0;
        
        while(slen >= 0 || tlen >= 0){ //O(N)
            while(slen >= 0){
                if(s[slen] == '#'){
                    skipS++;
                    slen--;
                }
                else if(skipS > 0){
                    skipS--;
                    slen--;
                }
                else
                    break;
            }
            while(tlen >= 0){
                if(t[tlen] == '#'){
                    skipT++;
                    tlen--;
                }
                else if(skipT > 0){
                    skipT--;
                    tlen--;
                }
                else
                    break;
            }
            
            if(slen >= 0 && tlen >= 0 && s[slen] != t[tlen])
                return false;
            if((slen >= 0) != (tlen >= 0))
                return false;
            slen--; tlen--;
        }
        
        return true;
    }
    //TC : O(N) SC : O(1)
};
