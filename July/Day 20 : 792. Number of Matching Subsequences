792. Number of Matching Subsequences
Given a string s and an array of strings words, return the number of words[i] that is a subsequence of s.

A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.

For example, "ace" is a subsequence of "abcde".
 
Example 1:
Input: s = "abcde", words = ["a","bb","acd","ace"]
Output: 3
Explanation: There are three strings in words that are a subsequence of s: "a", "acd", "ace".

Example 2:
Input: s = "dsahjpjauf", words = ["ahjpjau","ja","ahbwzgqnuk","tnmlanowax"]
Output: 2

class Solution {
public:
    int numMatchingSubseq(string s, vector<string>& words) {
        int count = 0;
        int n = s.size();
        unordered_map<string, int> m;
        for(auto word : words){
            m[word]++;
        }
        for(auto it : m){
            int s1 = 0;
            int s2 = 0;
            auto p = it.first;
            int np = p.size();
            
            while(s1 < n && s2 < np){
                if(p[s2] == s[s1]){
                    s1++, s2++;
                }
                else{
                    s1++;
                }
            }
            if(s2 == np) count += it.second;
        }
        
        return count;
    }
}; 
