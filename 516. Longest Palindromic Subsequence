516. Longest Palindromic Subsequence

Given a string s, find the longest palindromic subsequence's length in s.

A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.

Example 1:
Input: s = "bbbab"
Output: 4
Explanation: One possible longest palindromic subsequence is "bbbb".

Example 2:
Input: s = "cbbd"
Output: 2
Explanation: One possible longest palindromic subsequence is "bb".

class Solution {
public:
    int longestPalindromeSubseq(string s) {
        int n = s.size();
        
        vector<vector<int>> dp(n, vector<int>(n));
        
        for(int i = 0; i < n; i++)
            dp[i][i] = 1;
        
        for(int i = 1; i < n; i++){
            for(int j = 0; i + j < n; j++){
                int k = i + j;
                if(s[j] == s[k])
                    dp[j][k] = 2 + dp[j + 1][k - 1];
                else
                    dp[j][k] = max(dp[j + 1][k], dp[j][k - 1]);
            }
        }
        
        return dp[0][n - 1];
    }
};
